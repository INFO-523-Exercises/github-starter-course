---
title: "Github-starter-course"
format:
  html:
    theme: default
    author: "Kashyap Sai Prasad Nadendla"
---

## Learnings

### Github Workflows

Github has several mechanisms or safeguards which help us to collaborate and connect with other team members while working on a project. 

-> A user can first create a Repository, this is where all project files are created and other members can be added onto the Repository or 'repo' to collaborate.

-> Cloning is a Git feature which allows us to copy the repo files onto our local device and work on them individually in our system. This can be synced with the main repo via Git so that you can add or delete changes.

-> A user must first stage changes in their local system and then commit them to the remote Github repository along with a commit message to describe the changes. This creates a sort of "checkpoint" for everyone to view and know what is being updated in the repo.

-> Push and Pull are two major features of Git wherein users can either push their code changes or pull. Usually in a team, if there are multiple people working on a project or component, Git helps us to maintain integrity as well as updation of data through Push and Pull. A user can pull someone else's work and have the updated files on their system to work with. Similarly, if a user adds a component, they can push the files/code to the repo so that when a teammate pull's the from the repo, they have the latest version of the files.

-> Branches allow us to work on new features or experiment and test components.

-> Fork is another way to copy a repository. 

-> Issues tab allows us to review feedback or read about any bugs in any component or code. We can collaborate and interact with team members and mention details. 

## Challenges

Still need to get used to understand the workflow of Github when there are conflicts in code when pulling from a repository. This is usually encountered when working with a team where multiple people work on the same file/component. Hence, need more experience with such cases.

Have to learn and understand more about the features that Git has and get comfortable with the workflow functions.
